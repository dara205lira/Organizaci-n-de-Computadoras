section .data
    prompt1 db 'Introduce el primer digito: ', 0    ; mensaje para el primer número
    prompt2 db 'Introduce el segundo digito: ', 0   ; mensaje para el segundo número
    result_msg db 'La suma de', 10, 0                ; mensaje para el resultado

section .bss
    num1 resd 1    ; reserva espacio para el primer número
    num2 resd 1    ; reserva espacio para el segundo número
    suma resd 1    ; reserva espacio para la suma

section .text
    global _start

_start:
    ; mostrar mensaje de entrada para el primer número
    mov eax, 4          ; syscall para escribir
    mov ebx, 1          ; descriptor de archivo stdout
    mov ecx, prompt1    ; dirección del mensaje
    mov edx, 30         ; longitud del mensaje
    int 0x80            ; llamada al sistema

    ; leer el primer número
    mov eax, 3          ; syscall para leer
    mov ebx, 0          ; descriptor de archivo stdin
    mov ecx, num1       ; dirección de memoria para num1
    mov edx, 4          ; número de bytes a leer
    int 0x80            ; llamada al sistema

    ; mostrar mensaje de entrada para el segundo número
    mov eax, 4          ; syscall para escribir
    mov ebx, 1          ; descriptor de archivo stdout
    mov ecx, prompt2    ; dirección del mensaje
    mov edx, 30         ; longitud del mensaje
    int 0x80            ; llamada al sistema

    ; leer el segundo número
    mov eax, 3          ; syscall para leer
    mov ebx, 0          ; descriptor de archivo stdin
    mov ecx, num2       ; dirección de memoria para num2
    mov edx, 4          ; número de bytes a leer
    int 0x80            ; llamada al sistema

    ; realizar la suma
    mov eax, [num1]     ; cargar num1 en eax
    add eax, [num2]     ; sumar num2 a eax
    mov [suma], eax     ; almacenar el resultado en suma

    ; mostrar el resultado
    mov eax, 4          ; syscall para escribir
    mov ebx, 1          ; descriptor de archivo stdout
    mov ecx, result_msg ; dirección del mensaje
    mov edx, 32         ; longitud del mensaje
    int 0x80            ; llamada al sistema

    ; salir
    mov eax, 1          ; syscall para salir
    xor ebx, ebx        ; código de salida 0
    int 0x80            ; llamada al sistema
